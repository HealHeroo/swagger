openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Dokumen API Cloud Function Aplikasi Kesehatan HealHero
  termsOfService: https://github.com/HealHeroo/swagger
  contact:
    email: juwitastefany13@gmail.com
  license:
    name: HealHero Package
    url: https://pkg.go.dev/github.com/HealHeroo/be_healhero
  version: 1.0.11
externalDocs:
  description: Repo GCF
  url: https://github.com/HealHeroo/gcf_healhero
servers:
  - url: https://asia-southeast2-peak-equator-402307.cloudfunctions.net
tags:
  - name: User
    description: Data User
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intern-monitoring.github.io/gcf/user/
  - name: Auth
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/HealHeroo/gcf_healhero/tree/main/login
  - name: Pengguna
    description: Pengguna to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/HealHeroo/gcf_healhero/tree/main/pengguna
  - name: Driver
    description: Driver to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/HealHeroo/gcf_healhero/tree/main/driver
  - name: Obat
    description: Obat to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/HealHeroo/gcf_healhero/tree/main/obat
  - name: Order
    description: Order to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/HealHeroo/gcf_healhero/tree/main/order
paths:
  /user:
    get:
      tags:
        - User
      summary: Get All User
      description: List Data User
      operationId: getUserJSON
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: Invalid status value
  /login:
    post:
      tags:
        - Auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "405":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: asdasdasdasd
        email:
          type: string
          example: admin@gmail.com
        role:
          type: string
          example: admin
    Login:
      type: object
      properties:
        email:
          type: string
          example: yourmail@gmail.com
        password:
          type: string
          example: secret
    Pengguna:
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
          example: John Doe
        studentId:
          type: string
          example: 123456
        email:
          type: string
          example: john@example.com
    PenggunaArray:
      description: List of Pengguna objects
      type: array
      items:
        $ref: "#/components/schemas/Pengguna"
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: message
        token:
          type: string
          example: token
    Driver:
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
          example: Driver Name
        address:
          type: string
          example: Driver Address
        contact:
          type: string
          example: contact@example.com
    DriverArray:
      description: List of Driver objects
      type: array
      items:
        $ref: "#/components/schemas/Driver"
    Obat:
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
          example: Obat Name
        duration:
          type: string
          example: 3 months
        location:
          type: string
          example: Obat Location
    ObatArray:
      description: List of Obat objects
      type: array
      items:
        $ref: "#/components/schemas/Obat"
    Order:
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
          example: Order Name
        email:
          type: string
          example: Order@example.com
    OrderArray:
      description: List of Order objects
      type: array
      items:
        $ref: "#/components/schemas/Order"
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Login"
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AuthResponse"
  securitySchemes:
    token:
      type: apiKey
      name: Authorization
      in: header